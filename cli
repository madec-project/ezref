#!/usr/bin/env node
/*jshint node:true,laxcomma:true*/
/* vim: set ft=javascript: */
"use strict";

if (process.argv.length < 3) {
  var commandName = process.argv[1].split('/').slice(-1)[0];
  console.log("Usage:");
  console.log(' ' + commandName + ' public');
  console.log('  public being a directory path, and public.json the settings file.');
  console.log('  See https://github.com/madec-project/ezref for more details.');
  process.exit(1);
}

var path       = require('path');
var httpServer = require('http-server');
var colors     = require('colors');
// Get app preferences (port, dataPath)
var dataPath   = path.resolve(process.argv.slice(2).shift());
var configPath = dataPath + ".json";
var config     = require(configPath);
var host       = process.env.EZMASTER_PUBLIC_DOMAIN || "0.0.0.0";

var log        = console.log; //function () {};
var silent     = false;
var requestLogger;

if (!silent) {
  requestLogger = function(req, res, error) {
    var date = (new Date()).toUTCString();
    if (error) {
      log('[%s] "%s %s" Error (%s): "%s"', date, req.method.red, req.url.red, error.status.toString().red, error.message.red);
    } else {
      log('[%s] "%s %s" "%s"', date, req.method.cyan, req.url.cyan, req.headers['user-agent']);
    }
  };
}

config.cache = Number(config.cache || 3600);
config.showDir = String(config.showDir);
config.autoIndex = String(config.autoIndex);
config.gzip = Boolean(config.gzip || true);
config.contentType = String(config.contentType || 'application/octet-stream');
config.port = Number(process.env.PORT || 3000);
config.root = String(dataPath);
config.host = String(host);
config.logFn = requestLogger;
config.cors = Boolean(config.cors || true);
config.corsHeaders = undefined; // String('xxx yyy zzz')
config.https = Boolean(config.https || false);
config.robots = Boolean(config.robots || false);
config.proxy = undefined; // String('http://....')
config.ext = String(config.ext || 'html');

log(config);


if (!config.port) {
  throw new Error('No port given to ezref!');
}

var server = httpServer.createServer(config);
server.listen(config.port, host, function () {
  var hostname = process.env.EZMASTER_PUBLIC_DOMAIN
  ? process.env.EZMASTER_PUBLIC_DOMAIN
  : host + ':' + config.port;
  var protocol      = config.https ? 'https:' : 'http:';

  log('Starting up http-server, serving ' +
    server.root +
    (config.https ? (' through' + ' https') : '') +
    ' on: ' +
    protocol + '//' + hostname);

  log('Hit CTRL-C to stop the server');
});

process.on('SIGINT', function() {
  log('Server is killed. Caught SIGINT exiting');
  process.exit(1);
});

process.on('SIGTERM', function() {
  server.close(function() {
    log('Server is stopped. Caught SIGTERM exiting');
    process.exit(1);
  });
});
